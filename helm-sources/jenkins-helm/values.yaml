replicaCount: 1

image:
  repository: jfrog.it-academy.by/public/jenkins-ci:spishchyk_30
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  testport: 50000

ingress:
  enabled: true
  className: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: jenkins.k8s-15.sa
      paths:
      - path: /
        pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 2
    memory: 3Gi
  requests:
    cpu: 2
    memory: 2Gi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
- name: jenkins-auth-config
  configMap:
    name: basic-security
- name: jenkins-config-yaml
  configMap:
    name: jenkins-config
- name: jenkins-config
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: jenkins-auth-config
  mountPath: /var/jenkins_home/init.groovy.d/basic-security.groovy
  subPath: basic-security.groovy
- name: jenkins-config-yaml
  mountPath: /var/jenkins_home/casc_configs/jenkins.yaml
  subPath: jenkins.yaml
- name: jenkins-config
  mountPath: /var/jenkins_home
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
nsf:
  server: 192.168.37.105
  path: /mnt/IT-Academy/nfs-data/sa2-30-24/a_fonichkin/jenkins
namespace: ci-cd
